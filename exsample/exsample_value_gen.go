// Code generated by go-genvalueobject; DO NOT EDIT.

package exsample

import (
	time "time"
)

// NewEmployee is constructor for Employee.
func NewEmployee(id EmployeeID, name string, salary uint, department *Department, joinAt time.Time) *Employee {
	return &Employee{
		id: id, name: name, salary: salary, department: department, joinAt: joinAt,
	}
}

// GetID returns id.
func (rcv *Employee) GetID() EmployeeID {
	if rcv == nil {
		// return zero value
		return Employee{}.id
	}
	return rcv.id
}

// GetName returns name.
func (rcv *Employee) GetName() string {
	if rcv == nil {
		// return zero value
		return ""
	}
	return rcv.name
}

// GetSalary returns salary.
func (rcv *Employee) GetSalary() uint {
	if rcv == nil {
		// return zero value
		return 0
	}
	return rcv.salary
}

// GetDepartment returns department.
func (rcv *Employee) GetDepartment() *Department {
	if rcv == nil {
		// return zero value
		return nil
	}
	return rcv.department
}

// GetJoinAt returns joinAt.
func (rcv *Employee) GetJoinAt() time.Time {
	if rcv == nil {
		// return zero value
		return Employee{}.joinAt
	}
	return rcv.joinAt
}

// NewDepartment is constructor for Department.
func NewDepartment(id int, name string) *Department {
	return &Department{
		id: id, name: name,
	}
}

// GetID returns id.
func (rcv *Department) GetID() int {
	if rcv == nil {
		// return zero value
		return 0
	}
	return rcv.id
}

// GetName returns name.
func (rcv *Department) GetName() string {
	if rcv == nil {
		// return zero value
		return ""
	}
	return rcv.name
}
